#+TITLE: Hygeia
#+AUTHOR: Artin Ghasivand

* IDEA Computation
+ [ ] Compute all occurnces of a Mood in a given time stamp
+ [ ] Compute the average productivity of a given time stamp
+ [ ] Get information in strings and then computer them into types
+ [ ] Convert all the information into types in the parser itself

** Having the ability the compare you perseption of your loved one with their own entry in order to see how much empathy you can feel while talking to them.

* IDEA Report

+ [ ] Show a graph to represent different moods throughout the month and use the intensity for graphing them
+ [ ] Use statistical functions like variance, mean and median to graph your moods according to their value and their intensity

* TODO Feature [0/0]

** Computation [0/3]
+ [ ] rewrite Headers as type families in order to write different instances for the Header types
+ [ ] use singletons and phantom type parameters in order to keep track of the Mood data on the type-level computation

** Daemon [/]
+ [ ] Check and compute in the directory ~/.Hygeia/Entries
+ [ ] Generate template files for users to fill in named by date for every Month
+ [ ] Put the results in the directory ~/.Bruce/Reports
+ [ ] Works with mutt for E-mail integration
+ [ ] Weekly and Monthly report both with macOs and E-mail integration

** Parser [0/2]
+ [ ] Make all the parsers case insensitive even for the headers
+ [ ] Change the Header parsers to return a `Header a` type

** CLI [/]
+ [ ] Being able to Edit the Entries and then recompute again
+ [ ] Asks if you want to add new sections like Alcohol Cigarette and ...
+ [ ] Asks for Email to Send Weekly and Monthly report to it

** Report [/]
+ [ ] Tell the Amount of days that patient felt a certain way or scored a certain number
+ [ ] Give percentages for the Moods, for example, 1/3 of the month you were feeling Neutral or ...


* TODO Refactor

** Computation [3/3]


** Daemon [/]

** Parser [0/4]
+ [ ] Rewrite date with spaces and <* binary operator
+ [ ] Rewrite parseSleep with a way to parse every possible "wake up :". for example "Wake up:"
+ [ ] Apply hlint and refactor all of the things that come up with hlint's suggestions
+ [ ] Rewrite the show instance for the Header type in order to use it for generating reports

** CLI [/]

** Type-level [/]

** Report [/]

* TODO Bug

** Computation [/]

** Daemon [/]

** Parser [1/2]
+ [X] Functions made <|> not working properly
+ [ ] After you got the package mess worked out, replace every instance of string with string'


** CLI [/]

** Report [/]

** Cabal configuration [/]
+ [ ] Fix the parsec version
